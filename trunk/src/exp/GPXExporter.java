package exp;
import ewe.sys.*;
import ewe.io.File;
import CacheWolf.*;
/**
*	Class to export the cache database to a GPX file with gc.com
*	extensions.<br>
*	Export of logs is not that nice. The cause is that CacheWolf does not spider
*	logs individually, rather all logs as a single entity.
*	ClassID = 2000
*/
public class GPXExporter extends Exporter{
	
	public GPXExporter(){
		super();
		this.setMask("*.gpx");
		this.setNeedCacheDetails(true);
		this.setHowManyParams(LAT_LON);
		this.setTmpFileName(File.getProgramDirectory() + "/temp.gpx");
	}
	
	public GPXExporter(Preferences p, Profile prof){
		super();
		this.setMask("*.gpx");
		this.setNeedCacheDetails(true);
		this.setHowManyParams(LAT_LON);
		this.setTmpFileName(File.getProgramDirectory() + "/temp.gpx");
	}
	
	public String header() {
		StringBuffer strBuf = new StringBuffer(200);
		Time tim = new Time();
		
		strBuf.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n");
		strBuf.append("<gpx xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" creator=\"Groundspeak Pocket Query\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0 http://www.groundspeak.com/cache/1/0/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\r\n");
		strBuf.append("  <desc>Geocache file generated by CacheWolf</desc>\r\n");
		strBuf.append("  <author>CacheWolf</author>\r\n");
		strBuf.append("  <email>test@test.com</email>\r\n");
		tim = tim.setFormat("yyyy-MM-dd");
		tim = tim.setToCurrentTime();
		strBuf.append(" <time>"+tim.toString()+"T00:00:00.0000000-07:00</time>\r\n");

		return strBuf.toString();
	}
	
	public String record(CacheHolderDetail ch, String lat, String lon) {
		StringBuffer strBuf = new StringBuffer(1000);
		Time tim = new Time();

		tim = tim.setFormat("yyyy-MM-dd");
		try{
			strBuf.append("  <wpt lat=\""+lat+"\" lon=\""+lon+"\">\r\n");
			if (ch.DateHidden.length()> 0){
				tim.parse(ch.DateHidden, "y-M-d");
			}
			else {
				tim.setText("2000-01-01");
			}
			strBuf.append("    <time>"+tim.toString()+"T00:00:00.0000000-07:00</time>\r\n");
			strBuf.append("    <name>"+ch.wayPoint+"</name>\r\n");
			strBuf.append("    <desc>"+SafeXML.cleanGPX(ch.CacheName)+" by "+SafeXML.cleanGPX(ch.CacheOwner)+"</desc>\r\n");
			strBuf.append("    <url>http://www.geocaching.com/seek/cache_details.aspx?wp="+ch.wayPoint+"&amp;Submit6=Find</url>\r\n");
			strBuf.append("    <urlname>"+SafeXML.cleanGPX(ch.CacheName)+" by "+SafeXML.cleanGPX(ch.CacheOwner)+"</urlname>\r\n");
			if (!ch.isAddiWpt()){
				strBuf.append("    <sym>Geocache</sym>\r\n");
				strBuf.append("    <type>Geocache|"+CacheType.transType(ch.type)+"</type>\r\n");
				String dummyAvailable = ch.is_available ? "True":"False";
				String dummyArchived = ch.is_archived ? "True":"False";
				strBuf.append("    <groundspeak:cache available=\""+ dummyAvailable + "\" archived=\"" + dummyArchived+ "\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\r\n");
				strBuf.append("      <groundspeak:name>"+SafeXML.cleanGPX(ch.CacheName)+"</groundspeak:name>\r\n");
				strBuf.append("      <groundspeak:placed_by>"+SafeXML.cleanGPX(ch.CacheOwner)+"</groundspeak:placed_by>\r\n");
				strBuf.append("      <groundspeak:owner>"+SafeXML.cleanGPX(ch.CacheOwner)+"</groundspeak:owner>\r\n");
				strBuf.append("      <groundspeak:type>"+CacheType.transType(ch.type)+"</groundspeak:type>\r\n");
				strBuf.append("      <groundspeak:container>"+ch.CacheSize+"</groundspeak:container>\r\n");
				strBuf.append("      <groundspeak:difficulty>"+ch.hard.replace(',','.')+"</groundspeak:difficulty>\r\n");
				strBuf.append("      <groundspeak:terrain>"+ch.terrain.replace(',','.')+"</groundspeak:terrain>\r\n");
				String dummyHTML = ch.is_HTML ? "True":"False";
				strBuf.append("      <groundspeak:long_description html=\"" + dummyHTML + "\">\r\n");
				strBuf.append("      "+SafeXML.cleanGPX(ch.LongDescription));
				strBuf.append("      \n</groundspeak:long_description>\r\n");
				strBuf.append("	  <groundspeak:encoded_hints>"+SafeXML.cleanGPX(Common.rot13(ch.Hints))+"</groundspeak:encoded_hints>\r\n");
				strBuf.append("      <groundspeak:logs>\r\n");
				strBuf.append("      </groundspeak:logs>\r\n");
				strBuf.append("      <groundspeak:travelbugs />\r\n");
				strBuf.append("    </groundspeak:cache>\r\n");
			}else {
				// there is no HTML in the description of addi wpts
				strBuf.append("    <cmt>"+ch.LongDescription+"</cmt>\r\n");
				strBuf.append("    <sym>"+CacheType.transType(ch.type)+"</sym>\r\n");
				strBuf.append("    <type>Waypoint|"+CacheType.transType(ch.type)+"</type>\r\n");
			}
			strBuf.append("  </wpt>\r\n");
		}catch(Exception e){
			e.printStackTrace();
			return null;
		}//try

		return strBuf.toString();
	}
	
	public String trailer() {
		return "</gpx>";
	}
	
}
